Generate the bsp (with script make_minized....sh) and navigate into the newly-created project.

BOOT METHODS:

1- Boot from JTAG (u-boot, kernel & minimal INITRD):
    Position the BOOT Switch on the board to "J" (jtag).
    Run 'xsdb boot_jtag_INITRD_MINIMAL.tcl' to load the FSBL, bitstream, u-boot, 
    and kernel with INITRD.
    
2- Boot from QSPI (u-boot, kernel & minimal INITRD):

    Position the BOOT Switch on the board to "J" (jtag).
    sh boot_qspi_INITRD_MINIMAL.sh

    Position the BOOT Switch on the board to "F" (Flash).
    Restart the board, and Linux should boot from qspi.

3- Boot from QSPI (u-boot) and EMMC (kernel & INITRD):
    *** The steps below may not work ***
    *** Fetching files from USB while in u-boot doesn't always work ***

    *** This boot method does not work because the rootfs is too large to fit in RAM ***
    *** It is left here for an axample if the user chooses to downsize the rootfs ***
    
    Copy the following files to the root folder of a USB Flash drive:
        'image_INITRD_FULL.ub'
        'images/linux/avnet-boot/avnet_emmc.scr' 
        'images/linux/avnet-boot/avnet_prog_emmc.scr'

    Insert the USB stick on the Minized 
    (Remember to also plug the 2nd micro-USB cable, to provide enough power to the USB stick).

    Boot from QSPI (method 2), but when u-boot starts, stop it by hitting any key.

    In u-boot console, type the following commands:
        usb reset
        usb start
        fatload usb 0:1 $scriptaddr avnet_prog_emmc.scr
        source $scriptaddr

    Reboot the board, and let u-boot automatically load the kernel on the EMMC.

4- Boot from QSPI (u-boot) and EMMC (kernel & Ext4 rootfs):

    Copy 'rootfs.wic' in the root folder of an USB stick.

    Insert the USB stick on the Minized 
    (Remember to also plug the 2nd micro-USB cable, to provide enough power to the USB stick).

    Boot from QSPI (method 2)

    In Linux, execute these commands:

        umount /dev/mmcblk0*
        dd if=/run/media/sda1/rootfs.wic of=/dev/mmcblk0
        cp /media/sd-mmcblk0p1/avnet-boot/avnet_emmc.scr /media/sd-mmcblk0p1/boot.scr

        umount /dev/mmcblk0*
        parted /dev/mmcblk0 resizepart 2 100%
        umount /dev/mmcblk0*
        e2fsck -f /dev/mmcblk0p2
        resize2fs /dev/mmcblk0p2

        flash_erase /dev/mtd2 0 0 (used to remove the boot script on the qspi, so that u-boot
        will look for a boot script on the emmc)

    Reboot the board, and let u-boot automatically load the kernel on the EMMC.


Note1: if your emmc does not have a partition table follow these steps:
    - boot a linux from jtag (method 1) or qspi (method 5) or sd (method 3)
    - parted /dev/mmcblk0 mklabel gpt
    - parted /dev/mmcblk0 mkpart primary fat32 0% 100%
    - mkfs.vfat /dev/mmcblk0p1


Note2: once the emmc is partitionned, the boot part (#1) will be too small
to host a full kernel and initrd. So, after you have done boot method 4, you will have to
do the following to be able to boot from method 3 again:

    - boot a linux from jtag (method 1)
    - execute these commands:
        umount /dev/mmcblk0*
        parted /dev/mmcblk0 rm 2
        umount /dev/mmcblk0*
        parted /dev/mmcblk0 resizepart 1 100%
        umount /dev/mmcblk0*
        mkfs.vfat /dev/mmcblk0p1
